{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/containerComponents/erc20/ModalCheckDailyLimitERC.js\";\nimport React from 'react';\nimport ModalContent from '../../presentationalComponents/ModalContent.js';\nimport CheckDailyLimitERCForm from '../../presentationalComponents/CheckDailyLimitERCForm.js';\nimport '../../css/Modal.css';\nimport { connect } from 'react-redux';\n\nclass ModalCheckDailyLimitERC extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n\n      switch (name) {\n        case 'ownerPub':\n          if (event.target.validity.tooShort) {\n            event.target.setCustomValidity('Public key has to be 42 characters');\n          } else if (event.target.validity.patternMismatch) {\n            event.target.setCustomValidity('Public key has to start with \"0x\"');\n          } else {\n            event.target.setCustomValidity('');\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.checkLimit(this.state.ownerPub, this.props.tokenSymbol);\n      document.getElementById('CheckDailyLimitERC').reset();\n    };\n\n    this.openModal = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.onKeyDown = event => {\n      return event.keyCode === 27 && this.closeModal();\n    };\n\n    this.onClickAway = event => {\n      if (this.modalNode && this.modalNode.contains(event.target)) return;\n      this.closeModal();\n    };\n\n    this.checkLimit = (ownerPub, tokenSymbol) => {\n      const modal = this;\n      const multisigERC20 = this.props.multisigERC20;\n      multisigERC20.methods.limits(ownerPub, tokenSymbol).call({\n        from: ownerPub\n      }).then(limit => {\n        modal.setState({\n          limit: limit.dailyLimit,\n          dailyLimitReceipt: true\n        });\n        modal.openModal();\n      });\n    };\n\n    this.state = {\n      limit: '',\n      ownerPub: '',\n      isOpen: false,\n      dailyLimitReceipt: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(CheckDailyLimitERCForm, {\n      handleSubmit: this.handleSubmit,\n      handleInputChange: this.handleInputChange,\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), this.state.isOpen && React.createElement(ModalContent, {\n      closeModal: this.closeModal,\n      onKeyDown: this.onKeyDown,\n      onClickAwsay: this.onClickAway,\n      modalRef: n => this.modalNode = n,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.dailyLimitReceipt ? React.createElement(\"p\", {\n      className: \"modalTextTx\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Current Token limit is: \", this.state.limit) : null));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    multisigERC20: state.data.multisigERC20,\n    tokenSymbol: state.data.chosenTokenSymbol\n  };\n}\n\nexport default connect(mapStateToProps)(ModalCheckDailyLimitERC);","map":{"version":3,"sources":["/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/containerComponents/erc20/ModalCheckDailyLimitERC.js"],"names":["React","ModalContent","CheckDailyLimitERCForm","connect","ModalCheckDailyLimitERC","Component","constructor","props","handleInputChange","event","preventDefault","target","name","value","validity","tooShort","setCustomValidity","patternMismatch","setState","handleSubmit","checkLimit","state","ownerPub","tokenSymbol","document","getElementById","reset","openModal","isOpen","closeModal","onKeyDown","keyCode","onClickAway","modalNode","contains","modal","multisigERC20","methods","limits","call","from","then","limit","dailyLimit","dailyLimitReceipt","render","errors","n","mapStateToProps","data","chosenTokenSymbol"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ModalContent from '../../presentationalComponents/ModalContent.js';\nimport CheckDailyLimitERCForm from '../../presentationalComponents/CheckDailyLimitERCForm.js';\nimport '../../css/Modal.css';\nimport { connect } from 'react-redux';\n\nclass ModalCheckDailyLimitERC extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: '',\n            ownerPub: '',\n            isOpen: false,\n            dailyLimitReceipt: false\n        };\n    }\n\n    handleInputChange = (event) => {\n        event.preventDefault();\n        const { name, value } = event.target;\n\n        switch (name) {\n        case 'ownerPub':\n            if (event.target.validity.tooShort) {\n                event.target.setCustomValidity('Public key has to be 42 characters');\n            } else if (event.target.validity.patternMismatch) {\n                event.target.setCustomValidity('Public key has to start with \"0x\"');\n            } else {\n                event.target.setCustomValidity('');\n            }  \n            break; \n        default:\n            break;\n        }\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.checkLimit(this.state.ownerPub, this.props.tokenSymbol);\n        document.getElementById('CheckDailyLimitERC').reset();\n    }\n  \n    openModal = () => {\n        this.setState({ \n            isOpen: true\n        });\n    };\n\n    closeModal = () => {\n        this.setState({ \n            isOpen: false \n        });\n    };\n\n    onKeyDown = (event) => {\n        return event.keyCode === 27 && this.closeModal();\n    }\n  \n    onClickAway = (event) => {\n        if (this.modalNode && this.modalNode.contains(event.target)) return;\n        this.closeModal();\n    };\n\n    checkLimit = (ownerPub, tokenSymbol) => {\n        const modal = this;\n        const multisigERC20 = this.props.multisigERC20;\n        multisigERC20.methods.limits(ownerPub, tokenSymbol).call({ from: ownerPub }).then( limit => {\n            modal.setState({ \n                limit: limit.dailyLimit,\n                dailyLimitReceipt: true\n            });\n            modal.openModal();\n        });\n    }\n\n    render() {\n\n        return (\n            <span>\n                <CheckDailyLimitERCForm \n                handleSubmit={this.handleSubmit} \n                handleInputChange={this.handleInputChange}\n                errors={this.state.errors}/>\n                {\n                this.state.isOpen && \n                <ModalContent \n                closeModal={this.closeModal} \n                onKeyDown={this.onKeyDown}\n                onClickAwsay={this.onClickAway}\n                modalRef={n => this.modalNode = n}> \n                {this.state.dailyLimitReceipt ? \n                <p className=\"modalTextTx\">Current Token limit is: {this.state.limit}\n                </p> \n                : null} \n\n                </ModalContent>\n                }\n            </span>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { \n        multisigERC20: state.data.multisigERC20,\n        tokenSymbol: state.data.chosenTokenSymbol\n    };\n}\n\nexport default connect(mapStateToProps)(ModalCheckDailyLimitERC);"]},"metadata":{},"sourceType":"module"}