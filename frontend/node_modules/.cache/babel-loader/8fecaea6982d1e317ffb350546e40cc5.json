{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/containerComponents/BlockchainData.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { MULTISIG_ABI, MULTISIG_ADDRESS, MULTISIG_ERC20_ABI, MULTISIG_ERC20_ADDRESS, ERC20_ABI, TOKENIMPERIAL_ADDRESS, TOKENDEMOCRATIC_ADDRESS, TOKENIMPERIAL_SYMBOL, TOKENDEMOCRATIC_SYMBOL } from '../config';\nimport SmartContract from './multisigEtherWallet/SmartContract';\nimport ERC20 from './erc20/ERC20';\nimport '../css/ButtonGroup.css';\nimport { connect } from 'react-redux';\nimport { setWeb3, setMultisig, setMultisigAddress, setMultisigERC, setTokenImperial, setTokenDemocratic, updateEtherBalance, updateContractBalance, updateTokenImperialBalance, updateTokenDemocraticBalance, updateTokenImperialContractBalance, updateTokenDemocraticContractBalance, setUpdateBalancesEther, setUpdateBalancesERC, setMultisigERC20Address } from '../redux/actions';\n/* Validate forms, clear data in forms, check that transaction transfer works correctly*/\n\nclass BlockchainData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateBalances = multisig => {\n      let etherBalance = null;\n      let contractBalance = null;\n      multisig.methods.balances(this.props.etherAddress).call({\n        from: this.props.etherAddress\n      }, (error, balance) => {\n        if (error) {\n          console.log(error);\n        } else {\n          contractBalance = balance;\n          this.props.web3.eth.getBalance(this.props.etherAddress, (error, balance) => {\n            if (error) {\n              console.log(error, 'Something went wrong');\n            } else {\n              etherBalance = balance;\n              this.props.updateEtherBalance(etherBalance);\n              this.props.updateContractBalance(contractBalance);\n            }\n          });\n        }\n      });\n    };\n\n    this.updateERCBalances = (tokenImperial, tokenDemocratic, multisigERC20) => {\n      console.log('here');\n      tokenImperial.methods.balanceOf(this.props.etherAddress).call({\n        from: this.props.etherAddress\n      }, (error, balance) => {\n        if (error) {\n          console.log(error);\n        } else {\n          this.props.updateTokenImperialBalance(balance);\n        }\n      });\n      tokenDemocratic.methods.balanceOf(this.props.etherAddress).call({\n        from: this.props.etherAddress\n      }, (error, balance) => {\n        if (error) {\n          console.log(error);\n        } else {\n          this.props.updateTokenDemocraticBalance(balance);\n        }\n      });\n      multisigERC20.methods.tokenBalances(this.props.etherAddress, TOKENIMPERIAL_SYMBOL).call({\n        from: this.props.etherAddress\n      }, (error, balance) => {\n        if (error) {\n          console.log(error);\n        } else {\n          this.props.updateTokenImperialContractBalance(balance);\n        }\n      });\n      multisigERC20.methods.tokenBalances(this.props.etherAddress, TOKENDEMOCRATIC_SYMBOL).call({\n        from: this.props.etherAddress\n      }, (error, balance) => {\n        if (error) {\n          console.log(error);\n        } else {\n          this.props.updateTokenDemocraticContractBalance(balance);\n        }\n      });\n    };\n\n    this.onHandleClick = e => {\n      e.preventDefault();\n      var current = document.getElementsByClassName('active');\n      current[0].className = current[0].className.replace(' active', '');\n      e.target.className += ' active';\n      const name = e.target.name;\n\n      switch (name) {\n        case 'Ethereum':\n          if (this.state.Ethereum !== true) {\n            this.setState({\n              'Ethereum': true\n            });\n          }\n\n          break;\n\n        case 'ERC20':\n          if (this.state.Ethereum === true) {\n            this.setState({\n              'Ethereum': false\n            });\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      Ethereum: true\n    };\n  }\n\n  componentDidMount() {\n    const web3 = new Web3('https://ropsten.infura.io/v3/a33baa265ae340c29c82373e91533edf');\n    this.props.setWeb3(web3);\n    const multisig = new web3.eth.Contract(MULTISIG_ABI, MULTISIG_ADDRESS);\n    this.props.setMultisig(multisig);\n    this.props.setMultisigAddress(MULTISIG_ADDRESS);\n    const multisigERC20 = new web3.eth.Contract(MULTISIG_ERC20_ABI, MULTISIG_ERC20_ADDRESS);\n    this.props.setMultisigERC(multisigERC20);\n    this.props.setMultisigERC20Address(MULTISIG_ERC20_ADDRESS);\n    const tokenImperial = new web3.eth.Contract(ERC20_ABI, TOKENIMPERIAL_ADDRESS);\n    this.props.setTokenImperial(tokenImperial);\n    const tokenDemocratic = new web3.eth.Contract(ERC20_ABI, TOKENDEMOCRATIC_ADDRESS);\n    this.props.setTokenDemocratic(tokenDemocratic);\n    this.updateBalances(multisig);\n    this.updateERCBalances(tokenImperial, tokenDemocratic, multisigERC20);\n    this.props.setUpdateBalancesEther(this.updateBalances);\n    this.props.setUpdateBalancesERC(this.updateERCBalances);\n    this.interval = setInterval(this.updateBalances(multisig), 1000);\n    this.interval = setInterval(this.updateERCBalances(tokenImperial, tokenDemocratic, multisigERC20), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"content\",\n      className: \"smart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btnGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"buttonInGroup active\",\n      name: \"Ethereum\",\n      onClick: this.onHandleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Ethereum\"), React.createElement(\"button\", {\n      className: \"buttonInGroup\",\n      name: \"ERC20\",\n      onClick: this.onHandleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"ERC20\")), this.state.Ethereum ? React.createElement(SmartContract, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) : React.createElement(ERC20, {\n      web3: this.state.web3,\n      address: this.props.etherAddress,\n      tokenImperialBalance: this.props.tokenImperialBalance,\n      tokenDemocraticBalance: this.props.tokenDemocracticBalance,\n      tokenImperial: this.props.tokenImperial,\n      tokenDemocratic: this.props.tokenDemocratic,\n      multisigERC20Address: setMultisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20,\n      tokenDemocraticContractBalance: this.props.tokenDemocraticContractBalance,\n      tokenImperialContractBalance: this.props.tokenImperialContractBalance,\n      updateERCBalances: this.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    etherAddress: state.data.etherAddress,\n    web3: state.data.web3,\n    multisig: state.data.multisig,\n    multisigERC20: state.data.multisigERC20,\n    tokenImperial: state.data.tokenImperial,\n    tokenDemocratic: state.data.tokenDemocratic,\n    etherBalance: state.data.etherBalance,\n    contractBalance: state.data.contractBalance,\n    tokenImperialBalance: state.data.tokenImperialBalance,\n    tokenDemocracticBalance: state.data.tokenDemocracticBalance,\n    tokenImperialContractBalance: state.data.tokenImperialContractBalance,\n    tokenDemocraticContractBalance: state.data.tokenDemocraticContractBalance\n  };\n}\n\nexport default connect(mapStateToProps, {\n  setWeb3,\n  setMultisig,\n  setMultisigAddress,\n  setMultisigERC,\n  setTokenImperial,\n  setTokenDemocratic,\n  updateEtherBalance,\n  updateContractBalance,\n  updateTokenImperialBalance,\n  updateTokenDemocraticBalance,\n  updateTokenImperialContractBalance,\n  updateTokenDemocraticContractBalance,\n  setUpdateBalancesEther,\n  setUpdateBalancesERC,\n  setMultisigERC20Address\n})(BlockchainData);","map":{"version":3,"sources":["/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/containerComponents/BlockchainData.js"],"names":["React","Component","Web3","MULTISIG_ABI","MULTISIG_ADDRESS","MULTISIG_ERC20_ABI","MULTISIG_ERC20_ADDRESS","ERC20_ABI","TOKENIMPERIAL_ADDRESS","TOKENDEMOCRATIC_ADDRESS","TOKENIMPERIAL_SYMBOL","TOKENDEMOCRATIC_SYMBOL","SmartContract","ERC20","connect","setWeb3","setMultisig","setMultisigAddress","setMultisigERC","setTokenImperial","setTokenDemocratic","updateEtherBalance","updateContractBalance","updateTokenImperialBalance","updateTokenDemocraticBalance","updateTokenImperialContractBalance","updateTokenDemocraticContractBalance","setUpdateBalancesEther","setUpdateBalancesERC","setMultisigERC20Address","BlockchainData","constructor","props","updateBalances","multisig","etherBalance","contractBalance","methods","balances","etherAddress","call","from","error","balance","console","log","web3","eth","getBalance","updateERCBalances","tokenImperial","tokenDemocratic","multisigERC20","balanceOf","tokenBalances","onHandleClick","e","preventDefault","current","document","getElementsByClassName","className","replace","target","name","state","Ethereum","setState","componentDidMount","Contract","interval","setInterval","componentWillUnmount","clearInterval","render","tokenImperialBalance","tokenDemocracticBalance","tokenDemocraticContractBalance","tokenImperialContractBalance","mapStateToProps","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { MULTISIG_ABI, MULTISIG_ADDRESS, MULTISIG_ERC20_ABI, MULTISIG_ERC20_ADDRESS, ERC20_ABI, \n\tTOKENIMPERIAL_ADDRESS, TOKENDEMOCRATIC_ADDRESS, TOKENIMPERIAL_SYMBOL, TOKENDEMOCRATIC_SYMBOL } from '../config';\nimport SmartContract from './multisigEtherWallet/SmartContract'; \nimport ERC20 from './erc20/ERC20';\nimport '../css/ButtonGroup.css';\nimport { connect } from 'react-redux';\nimport { setWeb3, setMultisig, setMultisigAddress, setMultisigERC, \n\tsetTokenImperial, setTokenDemocratic, updateEtherBalance, \n\tupdateContractBalance, updateTokenImperialBalance, updateTokenDemocraticBalance,\n\tupdateTokenImperialContractBalance, updateTokenDemocraticContractBalance, setUpdateBalancesEther,\n\tsetUpdateBalancesERC, setMultisigERC20Address } from '../redux/actions';\n\n\n/* Validate forms, clear data in forms, check that transaction transfer works correctly*/ \nclass BlockchainData extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tEthereum: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\n\t\tconst web3 = new Web3('https://ropsten.infura.io/v3/a33baa265ae340c29c82373e91533edf');\n\t\tthis.props.setWeb3(web3);\n\n\t\tconst multisig = new web3.eth.Contract(MULTISIG_ABI, MULTISIG_ADDRESS);\n\t\tthis.props.setMultisig(multisig);\n\t\tthis.props.setMultisigAddress(MULTISIG_ADDRESS);\n\n\t\tconst multisigERC20 = new web3.eth.Contract(MULTISIG_ERC20_ABI, MULTISIG_ERC20_ADDRESS);\n\t\tthis.props.setMultisigERC(multisigERC20);\n\t\tthis.props.setMultisigERC20Address(MULTISIG_ERC20_ADDRESS);\n\n\t\tconst tokenImperial = new web3.eth.Contract(ERC20_ABI, TOKENIMPERIAL_ADDRESS);\n\t\tthis.props.setTokenImperial(tokenImperial);\n\n\t\tconst tokenDemocratic = new web3.eth.Contract(ERC20_ABI, TOKENDEMOCRATIC_ADDRESS);\n\t\tthis.props.setTokenDemocratic(tokenDemocratic);\n\n\t\tthis.updateBalances(multisig);\n\t\tthis.updateERCBalances(tokenImperial, tokenDemocratic, multisigERC20);\n\n\t\tthis.props.setUpdateBalancesEther(this.updateBalances);\n\t\tthis.props.setUpdateBalancesERC(this.updateERCBalances);\n\n\t\tthis.interval = setInterval(this.updateBalances(multisig), 1000);\n\t\tthis.interval = setInterval(this.updateERCBalances(tokenImperial, tokenDemocratic, multisigERC20), 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interval);\n\t}\n\n\tupdateBalances = (multisig) => {\n\t\tlet etherBalance = null;\n\t\tlet contractBalance = null\n\t\tmultisig.methods.balances(this.props.etherAddress).call({ from: this.props.etherAddress }, (error, balance) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t} else {\n\t\t\t\tcontractBalance = balance;\n\t\t\t\tthis.props.web3.eth.getBalance(this.props.etherAddress, (error, balance) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.log(error, 'Something went wrong');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tetherBalance = balance;\n\t\t\t\t\t\tthis.props.updateEtherBalance(etherBalance);\n\t\t\t\t\t\tthis.props.updateContractBalance(contractBalance);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\tupdateERCBalances = (tokenImperial, tokenDemocratic, multisigERC20) => {\n\t\tconsole.log('here');\n\t\t\n\t\ttokenImperial.methods.balanceOf(this.props.etherAddress).call({from: this.props.etherAddress}, (error, balance) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t} else {\n\t\t\t\tthis.props.updateTokenImperialBalance(balance);\n\t\t\t}\n\t\t});\n\n\t\ttokenDemocratic.methods.balanceOf(this.props.etherAddress).call({from: this.props.etherAddress}, (error, balance) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t} else {\n\t\t\t\tthis.props.updateTokenDemocraticBalance(balance);\n\t\t\t}\n\t\t});\n\n\t\tmultisigERC20.methods.tokenBalances(this.props.etherAddress, TOKENIMPERIAL_SYMBOL).call({from: this.props.etherAddress}, (error, balance) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t} else {\n\t\t\t\tthis.props.updateTokenImperialContractBalance(balance);\n\t\t\t}\n\t\t});\n\n\t\tmultisigERC20.methods.tokenBalances(this.props.etherAddress, TOKENDEMOCRATIC_SYMBOL).call({from: this.props.etherAddress}, (error, balance) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t} else {\n\t\t\t\tthis.props.updateTokenDemocraticContractBalance(balance);\n\t\t\t}\n\t\t});\n\t}\n\n\tonHandleClick = (e) => {\n\t\te.preventDefault();\n\t\tvar current = document.getElementsByClassName('active');\n\t\tcurrent[0].className = current[0].className.replace(' active', '');\n\t\te.target.className += ' active';\n\t\tconst name = e.target.name;\n\n\t\tswitch (name) {\n\t\tcase 'Ethereum': \n\t\tif (this.state.Ethereum !== true) {\n\t\t\tthis.setState({ 'Ethereum': true });\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'ERC20': \n\t\tif (this.state.Ethereum === true) {\n\t\t\tthis.setState({ 'Ethereum': false });\n\t\t\t}\n\t\t\tbreak;   \n\t\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"content\" className =\"smart\">\n\t\t\t\t<div className=\"btnGroup\">\n\t\t\t\t\t<button className=\"buttonInGroup active\" name=\"Ethereum\" onClick={this.onHandleClick}>Ethereum</button>\n\t\t\t\t\t<button className=\"buttonInGroup\" name=\"ERC20\" onClick={this.onHandleClick}>ERC20</button>\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\tthis.state.Ethereum ? \n\t\t\t\t<SmartContract />\n\t\t\t\t:\n\t\t\t\t<ERC20 \n\t\t\t\tweb3={this.state.web3}\n\t\t\t\taddress={this.props.etherAddress} \n\t\t\t\ttokenImperialBalance={this.props.tokenImperialBalance}\n\t\t\t\ttokenDemocraticBalance={this.props.tokenDemocracticBalance}\n\t\t\t\ttokenImperial={this.props.tokenImperial}\n\t\t\t\ttokenDemocratic={this.props.tokenDemocratic}\n\t\t\t\tmultisigERC20Address={setMultisigERC20Address}\n\t\t\t\tmultisigERC20Token={this.props.multisigERC20}\n\t\t\t\ttokenDemocraticContractBalance={this.props.tokenDemocraticContractBalance}\n\t\t\t\ttokenImperialContractBalance={this.props.tokenImperialContractBalance}\n\t\t\t\tupdateERCBalances={this.updateERCBalances}/>\n\t\t\t\t}\n\t\t\t</div>  \n\t\t);\n  }\n}\n\nfunction mapStateToProps(state) {\n\treturn { \n\t\tetherAddress: state.data.etherAddress,\n\t\tweb3: state.data.web3,\n\t\tmultisig: state.data.multisig,\n\t\tmultisigERC20: state.data.multisigERC20,\n\t\ttokenImperial: state.data.tokenImperial,\n\t\ttokenDemocratic: state.data.tokenDemocratic,\n\t\tetherBalance: state.data.etherBalance,\n\t\tcontractBalance: state.data.contractBalance,\n\t\ttokenImperialBalance: state.data.tokenImperialBalance,\n\t\ttokenDemocracticBalance: state.data.tokenDemocracticBalance,\n\t\ttokenImperialContractBalance: state.data.tokenImperialContractBalance,\n\t\ttokenDemocraticContractBalance: state.data.tokenDemocraticContractBalance\n\t};\n}\n\nexport default connect(mapStateToProps, { setWeb3, setMultisig, setMultisigAddress, setMultisigERC, \n\tsetTokenImperial, setTokenDemocratic, updateEtherBalance, \n\tupdateContractBalance, updateTokenImperialBalance, updateTokenDemocraticBalance,\n\tupdateTokenImperialContractBalance, updateTokenDemocraticContractBalance, setUpdateBalancesEther,\n\tsetUpdateBalancesERC, setMultisigERC20Address })(BlockchainData);\n"]},"metadata":{},"sourceType":"module"}