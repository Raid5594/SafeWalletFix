{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport Login from './containerComponents/Login.js';\nimport BlockchainData from './containerComponents/BlockchainData.js';\nimport { connect } from 'react-redux';\nimport './css/App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setAddress = address => {\n      this.setState({\n        etherAddress: address,\n        login: true\n      });\n    };\n\n    this.state = {\n      etherAddress: '',\n      login: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.state.login ? React.createElement(BlockchainData, {\n      etherAddress: this.state.etherAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }) : React.createElement(Login, {\n      setAddress: this.setAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  etherAddress: state.data.etherAddress\n});\n\nexport default connect(null)(App);","map":{"version":3,"sources":["/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/App.js"],"names":["React","Component","Login","BlockchainData","connect","App","constructor","props","setAddress","address","setState","etherAddress","login","state","render","mapStateToProps","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,eAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAExBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,UARmB,GAQLC,OAAD,IAAa;AACtB,WAAKC,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEF,OADJ;AAEVG,QAAAA,KAAK,EAAE;AAFG,OAAd;AAIH,KAbkB;;AAEf,SAAKC,KAAL,GAAa;AACTF,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AASDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWD,KAAX,GAAmB,oBAAC,cAAD;AAAgB,MAAA,YAAY,EAAE,KAAKC,KAAL,CAAWF,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB,GAA+E,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,KAAKH,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpF,CADJ;AAKH;;AAvBuB;;AA0B5B,MAAMO,eAAe,GAAGF,KAAK,KAAK;AAC9BF,EAAAA,YAAY,EAAEE,KAAK,CAACG,IAAN,CAAWL;AADK,CAAL,CAA7B;;AAGA,eAAeP,OAAO,CAAC,IAAD,CAAP,CAAgBC,GAAhB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Login from './containerComponents/Login.js';\nimport BlockchainData from './containerComponents/BlockchainData.js';\nimport { connect } from 'react-redux';\nimport './css/App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            etherAddress: '',\n            login: false   \n        };\n    }\n\n    setAddress = (address) => {\n        this.setState({ \n            etherAddress: address,\n            login: true\n        });\n    }\n\n    render() {\n        return (\n            <div>\n               { this.state.login ? <BlockchainData etherAddress={this.state.etherAddress} /> : <Login setAddress={this.setAddress}/>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    etherAddress: state.data.etherAddress\n});\nexport default connect(null, )(App);\n"]},"metadata":{},"sourceType":"module"}