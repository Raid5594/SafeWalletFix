{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/containerComponents/erc20/ERC20.js\";\nimport React, { Component } from 'react';\nimport '../../css/Smart.css';\nimport ModalTokenAllowance from './ModalTokenAllowance.js';\nimport ModalAllowance from './ModalAllowance.js';\nimport ModalDepositERC from './ModalDepositERC.js';\nimport ModalTransferERCToken from './ModalTransferERCToken.js';\nimport ModalTransferERCSafely from './ModalTransferERCSafely.js';\nimport ModalDepositERCSafely from './ModalDepositERCSafely.js';\nimport ModalToken from '../multisigEtherWallet/ModalToken.js';\nimport ModalERCSafetyAddress from './ModalERCSafetyAddress.js';\nimport ModalERCSetLimit from './ModalERCSetLimit.js';\nimport ModalERCWithdrawLimit from './ModalERCWithdrawLimit.js';\nimport ModalRecoverERCSafely from './ModalRecoverERCSafely.js';\nimport ModalRecoverERC from './ModalRecoverERC.js';\nimport ModalCheckDailyLimitERC from './ModalCheckDailyLimitERC.js';\nimport { connect } from 'react-redux';\nimport { setChosenToken, setChosenTokenSymbol } from '../../redux/actions';\n\nclass ERC20 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = e => {\n      e.preventDefault();\n      const name = e.target.name;\n      this.setState({\n        [name]: !this.state[name]\n      });\n      let options = ['depositOptions', 'dailyLimitOptions', 'transactionOptions', 'recoveryOptions', 'safetyFeatures'];\n\n      for (let i = 0; i < 5; i++) {\n        if (options[i] !== name) {\n          this.setState({\n            [options[i]]: false\n          });\n        }\n      }\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.value);\n      let tokenName = event.target.value;\n      this.setState({\n        chosenTokenBalance: event.target.value\n      });\n\n      switch (tokenName) {\n        case 'tokenImperialBalance':\n          this.props.setChosenToken(this.props.tokenImperial);\n          this.props.setChosenTokenSymbol('0x746f6b656e496d70657269616c00000000000000000000000000000000000000');\n          this.setState({\n            chosenTokenContractBalance: 'tokenImperialContractBalance'\n          });\n          break;\n\n        case 'tokenDemocraticBalance':\n          this.props.setChosenToken(this.props.tokenDemocratic);\n          this.props.setChosenTokenSymbol('0x746f6b656e44656d6f6372617469630000000000000000000000000000000000');\n          this.setState({\n            chosenTokenContractBalance: 'tokenDemocraticContractBalance'\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.state = {\n      chosenTokenBalance: 'tokenImperialBalance',\n      chosenTokenContractBalance: 'tokenImperialContractBalance',\n      depositOptions: false,\n      dailyLimitOptions: false,\n      transactionOptions: false,\n      recoveryOptions: false,\n      safetyFeatures: false\n    };\n    this.props.setChosenToken(this.props.tokenImperial);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Your address: \", this.props.address), React.createElement(\"div\", {\n      className: \"smartDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"tokens\",\n      className: \"smartSelect\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"tokenImperialBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Token Imperial\"), React.createElement(\"option\", {\n      value: \"tokenDemocraticBalance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Token Democratic\"))), React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" Your token balance on Ethereum: \", this.props[this.state.chosenTokenBalance]), React.createElement(\"p\", {\n      className: \"smartP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Your token contract balance: \", this.props[this.state.chosenTokenContractBalance]), React.createElement(\"button\", {\n      className: \"smartButtonLong\",\n      name: \"depositOptions\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"deposit options\"), this.state.depositOptions ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(ModalTokenAllowance, {\n      multisigERC20Address: this.props.multisigERC20Address,\n      token: this.props.chosenToken,\n      web3: this.props.web3,\n      address: this.props.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(ModalAllowance, {\n      multisigERC20Address: this.props.multisigERC20Address,\n      token: this.props.chosenToken,\n      address: this.props.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(ModalDepositERC, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(ModalDepositERCSafely, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })) : null, React.createElement(\"button\", {\n      className: \"smartButtonLong\",\n      name: \"dailyLimitOptions\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"dailt limit management\"), this.state.dailyLimitOptions ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(ModalERCSetLimit, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(ModalERCWithdrawLimit, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(ModalCheckDailyLimitERC, {\n      multisigERC20Token: this.props.multisigERC20Token,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })) : null, React.createElement(\"button\", {\n      className: \"smartButtonLong\",\n      name: \"transactionOptions\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"transaction options\"), this.state.transactionOptions ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(ModalTransferERCSafely, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(ModalTransferERCToken, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })) : null, React.createElement(\"button\", {\n      className: \"smartButtonLong\",\n      name: \"recoveryOptions\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"recovery options\"), this.state.recoveryOptions ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(ModalRecoverERCSafely, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(ModalRecoverERC, {\n      web3: this.props.web3,\n      multisigERC20Address: this.props.multisigERC20Address,\n      multisigERC20Token: this.props.multisigERC20Token,\n      address: this.props.address,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      updateERCBalances: this.props.updateERCBalances,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })) : null, React.createElement(\"button\", {\n      className: \"smartButtonLong\",\n      name: \"safetyFeatures\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"safety features\"), this.state.safetyFeatures ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(ModalToken, {\n      address: this.props.address,\n      web3: this.props.web3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(ModalERCSafetyAddress, {\n      multisigERC20Token: this.props.multisigERC20Token,\n      tokenSymbol: this.props.chosenTokenSymbol,\n      address: this.props.address,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    address: state.data.etherAddress,\n    tokenImperial: state.data.tokenImperial,\n    tokenDemocratic: state.data.tokenDemocratic,\n    tokenImperialBalance: state.data.tokenImperialBalance,\n    tokenDemocracticBalance: state.data.tokenDemocracticBalance,\n    tokenImperialContractBalance: state.data.tokenImperialContractBalance,\n    tokenDemocraticContractBalance: state.data.tokenDemocraticContractBalance\n  };\n}\n\nexport default connect(mapStateToProps, {\n  setChosenToken,\n  setChosenTokenSymbol\n})(ERC20);","map":{"version":3,"sources":["/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/containerComponents/erc20/ERC20.js"],"names":["React","Component","ModalTokenAllowance","ModalAllowance","ModalDepositERC","ModalTransferERCToken","ModalTransferERCSafely","ModalDepositERCSafely","ModalToken","ModalERCSafetyAddress","ModalERCSetLimit","ModalERCWithdrawLimit","ModalRecoverERCSafely","ModalRecoverERC","ModalCheckDailyLimitERC","connect","setChosenToken","setChosenTokenSymbol","ERC20","constructor","props","handleClick","e","preventDefault","name","target","setState","state","options","i","handleChange","event","console","log","value","tokenName","chosenTokenBalance","tokenImperial","chosenTokenContractBalance","tokenDemocratic","depositOptions","dailyLimitOptions","transactionOptions","recoveryOptions","safetyFeatures","render","address","multisigERC20Address","chosenToken","web3","multisigERC20Token","chosenTokenSymbol","updateERCBalances","mapStateToProps","data","etherAddress","tokenImperialBalance","tokenDemocracticBalance","tokenImperialContractBalance","tokenDemocraticContractBalance"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../../css/Smart.css';\nimport ModalTokenAllowance from './ModalTokenAllowance.js'; \nimport ModalAllowance from './ModalAllowance.js';\nimport ModalDepositERC from './ModalDepositERC.js';\nimport ModalTransferERCToken from './ModalTransferERCToken.js';\nimport ModalTransferERCSafely from './ModalTransferERCSafely.js';\nimport ModalDepositERCSafely from './ModalDepositERCSafely.js';\nimport ModalToken from '../multisigEtherWallet/ModalToken.js'; \nimport ModalERCSafetyAddress from './ModalERCSafetyAddress.js';\nimport ModalERCSetLimit from './ModalERCSetLimit.js';\nimport ModalERCWithdrawLimit from './ModalERCWithdrawLimit.js';\nimport ModalRecoverERCSafely from './ModalRecoverERCSafely.js';\nimport ModalRecoverERC from './ModalRecoverERC.js';\nimport ModalCheckDailyLimitERC from './ModalCheckDailyLimitERC.js';\nimport { connect } from 'react-redux';\nimport { setChosenToken, setChosenTokenSymbol } from '../../redux/actions';\n\nclass ERC20 extends Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            chosenTokenBalance: 'tokenImperialBalance',\n            chosenTokenContractBalance: 'tokenImperialContractBalance',\n            depositOptions: false,\n            dailyLimitOptions: false,\n            transactionOptions: false,\n            recoveryOptions: false,\n            safetyFeatures: false\n        };\n        this.props.setChosenToken(this.props.tokenImperial);\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        const name = e.target.name;\n        this.setState({ [name]: !this.state[name] });\n        let options = ['depositOptions', 'dailyLimitOptions', 'transactionOptions', 'recoveryOptions', 'safetyFeatures'];\n        for (let i = 0; i < 5; i++) {\n            if (options[i] !== name) {\n                this.setState({ [options[i]]: false });\n            }\n        }\n    }\n\n    handleChange = (event) => {\n\n        console.log(event.target.value);\n        let tokenName = event.target.value;\n        this.setState({\n            chosenTokenBalance: event.target.value,\n        });\n        switch(tokenName) {\n            case 'tokenImperialBalance':\n                this.props.setChosenToken(this.props.tokenImperial);\n                this.props.setChosenTokenSymbol('0x746f6b656e496d70657269616c00000000000000000000000000000000000000');\n                this.setState({\n                    chosenTokenContractBalance: 'tokenImperialContractBalance'\n                });\n                break;\n            case 'tokenDemocraticBalance':\n                this.props.setChosenToken(this.props.tokenDemocratic);\n                this.props.setChosenTokenSymbol('0x746f6b656e44656d6f6372617469630000000000000000000000000000000000');\n                this.setState({\n                    chosenTokenContractBalance: 'tokenDemocraticContractBalance'\n                });\n                break;\n            default:\n                break;\n        }\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <p className=\"smartP\"> Your address: {this.props.address}</p>\n                <div className=\"smartDiv\">\n                    <select name=\"tokens\" className=\"smartSelect\" onChange={this.handleChange}>\n                        <option value=\"tokenImperialBalance\">Token Imperial</option>\n                        <option value=\"tokenDemocraticBalance\">Token Democratic</option>\n                    </select>\n                </div>\n                <p className=\"smartP\"> Your token balance on Ethereum: {this.props[this.state.chosenTokenBalance]}</p>\n                <p className=\"smartP\"> Your token contract balance: {this.props[this.state.chosenTokenContractBalance]}</p>\n                <button className=\"smartButtonLong\" name= \"depositOptions\" onClick={this.handleClick}>deposit options</button>\n                {\n                this.state.depositOptions ? \n                <React.Fragment>  \n                <ModalTokenAllowance \n                    multisigERC20Address={this.props.multisigERC20Address}\n                    token={this.props.chosenToken}\n                    web3={this.props.web3}\n                    address={this.props.address} />\n                <ModalAllowance \n                    multisigERC20Address={this.props.multisigERC20Address}\n                    token={this.props.chosenToken}\n                    address={this.props.address} />\n                <ModalDepositERC \n                    web3={this.props.web3}\n                    multisigERC20Address={this.props.multisigERC20Address}\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    address={this.props.address}\n                    tokenSymbol={this.props.chosenTokenSymbol}\n                    updateERCBalances={this.props.updateERCBalances} />\n                <ModalDepositERCSafely\n                    web3={this.props.web3}\n                    multisigERC20Address={this.props.multisigERC20Address}\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    address={this.props.address}\n                    tokenSymbol={this.props.chosenTokenSymbol}\n                    updateERCBalances={this.props.updateERCBalances} />\n                </React.Fragment>\n                : null\n                }\n                <button className=\"smartButtonLong\" name= \"dailyLimitOptions\" onClick={this.handleClick}>dailt limit management</button>\n                {\n                this.state.dailyLimitOptions ? \n                <React.Fragment>       \n                <ModalERCSetLimit\n                    web3={this.props.web3}\n                    multisigERC20Address={this.props.multisigERC20Address}\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    address={this.props.address}\n                    tokenSymbol={this.props.chosenTokenSymbol} />\n                <ModalERCWithdrawLimit\n                    web3={this.props.web3}\n                    multisigERC20Address={this.props.multisigERC20Address}\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    address={this.props.address}\n                    tokenSymbol={this.props.chosenTokenSymbol} />\n                <ModalCheckDailyLimitERC\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    tokenSymbol={this.props.chosenTokenSymbol} />\n                </React.Fragment>\n                : null\n                }   \n                <button className=\"smartButtonLong\" name= \"transactionOptions\" onClick={this.handleClick}>transaction options</button>\n                {\n                this.state.transactionOptions ? \n                <React.Fragment>       \n                <ModalTransferERCSafely\n                    web3={this.props.web3}\n                    multisigERC20Address={this.props.multisigERC20Address}\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    address={this.props.address}\n                    tokenSymbol={this.props.chosenTokenSymbol}\n                    updateERCBalances={this.props.updateERCBalances} />\n                <ModalTransferERCToken\n                    web3={this.props.web3}\n                    multisigERC20Address={this.props.multisigERC20Address}\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    address={this.props.address}\n                    tokenSymbol={this.props.chosenTokenSymbol}\n                    updateERCBalances={this.props.updateERCBalances} />\n                </React.Fragment>\n                : null\n                }    \n                <button className=\"smartButtonLong\" name= \"recoveryOptions\" onClick={this.handleClick}>recovery options</button>    \n                {\n                this.state.recoveryOptions ? \n                <React.Fragment>\n                <ModalRecoverERCSafely         \n                    web3={this.props.web3}\n                    multisigERC20Address={this.props.multisigERC20Address}\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    address={this.props.address}\n                    tokenSymbol={this.props.chosenTokenSymbol} \n                    updateERCBalances={this.props.updateERCBalances} />  \n                <ModalRecoverERC         \n                    web3={this.props.web3}\n                    multisigERC20Address={this.props.multisigERC20Address}\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    address={this.props.address}\n                    tokenSymbol={this.props.chosenTokenSymbol} \n                    updateERCBalances={this.props.updateERCBalances} />          \n                </React.Fragment>\n                : null\n                }\n                <button className=\"smartButtonLong\" name= \"safetyFeatures\" onClick={this.handleClick}>safety features</button>\n                {\n                this.state.safetyFeatures ? \n                <React.Fragment>\n                <ModalToken \n                    address={this.props.address}\n                    web3={this.props.web3} />\n                <ModalERCSafetyAddress\n                    multisigERC20Token={this.props.multisigERC20Token}\n                    tokenSymbol={this.props.chosenTokenSymbol}\n                    address={this.props.address} />              \n                </React.Fragment>\n                : null\n                }     \n            </div>         \n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { \n        address: state.data.etherAddress,\n        tokenImperial: state.data.tokenImperial,\n        tokenDemocratic: state.data.tokenDemocratic,\n        tokenImperialBalance: state.data.tokenImperialBalance,\n        tokenDemocracticBalance: state.data.tokenDemocracticBalance,\n        tokenImperialContractBalance: state.data.tokenImperialContractBalance,\n        tokenDemocraticContractBalance: state.data.tokenDemocraticContractBalance\n    };\n}\n\nexport default connect(mapStateToProps, { setChosenToken, setChosenTokenSymbol } )(ERC20);"]},"metadata":{},"sourceType":"module"}