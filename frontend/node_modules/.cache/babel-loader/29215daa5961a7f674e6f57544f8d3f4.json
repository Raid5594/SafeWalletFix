{"ast":null,"code":"var _jsxFileName = \"/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/containerComponents/multisigEtherWallet/ModalGetSafetyAddress.js\";\nimport React from 'react';\nimport ModalContent from '../../presentationalComponents/ModalContent.js';\nimport SafeAddressForm from '../../presentationalComponents/SafeAddressForm.js';\nimport '../../css/Modal.css';\n\nclass ModalGetSafetyAddress extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n\n      if (name === 'addressToCheck') {\n        if (event.target.validity.tooShort) {\n          event.target.setCustomValidity('Public key has to be 42 characters');\n        } else if (event.target.validity.patternMismatch) {\n          event.target.setCustomValidity('Public key has to start with \"0x\"');\n        } else {\n          event.target.setCustomValidity('');\n        }\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.multisig.methods.safetyKeys(this.state.addressToCheck).call({\n        from: this.state.address\n      }, (error, safetyAddress) => {\n        if (error) {\n          console.log(error);\n        } else {\n          console.log(safetyAddress);\n          document.getElementById('SafetyForm').reset();\n          this.setState({\n            safetyAddress: safetyAddress\n          });\n          this.toggle();\n        }\n      });\n    };\n\n    this.toggle = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.onKeyDown = event => {\n      return event.keyCode === 27 && this.toggle();\n    };\n\n    this.onClickAway = event => {\n      if (this.modalNode && this.modalNode.contains(event.target)) return;\n      this.toggle();\n    };\n\n    this.state = {\n      addressToCheck: '',\n      address: '',\n      safetyAddress: '',\n      isOpen: false\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    return {\n      address: props.address\n    };\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(SafeAddressForm, {\n      handleSubmit: this.handleSubmit,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), this.state.isOpen && React.createElement(ModalContent, {\n      toggle: this.toggle,\n      onKeyDown: this.onKeyDown,\n      onClickAway: this.onClickAway,\n      modalRef: n => this.modalNode = n,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"modalText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Your current safety address is: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), this.state.safetyAddress)));\n  }\n\n}\n\nexport default ModalGetSafetyAddress;","map":{"version":3,"sources":["/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/containerComponents/multisigEtherWallet/ModalGetSafetyAddress.js"],"names":["React","ModalContent","SafeAddressForm","ModalGetSafetyAddress","Component","constructor","props","handleInputChange","event","target","value","name","validity","tooShort","setCustomValidity","patternMismatch","setState","handleSubmit","preventDefault","multisig","methods","safetyKeys","state","addressToCheck","call","from","address","error","safetyAddress","console","log","document","getElementById","reset","toggle","isOpen","onKeyDown","keyCode","onClickAway","modalNode","contains","getDerivedStateFromProps","render","n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gDAAzB;AACA,OAAOC,eAAP,MAA4B,mDAA5B;AACA,OAAO,qBAAP;;AAEA,MAAMC,qBAAN,SAAoCH,KAAK,CAACI,SAA1C,CAAoD;AAEhDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,iBAdmB,GAcEC,KAAD,IAAW;AAC3B,YAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,YAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;;AAEA,UAAIA,IAAI,KAAK,gBAAb,EAA+B;AAC3B,YAAIH,KAAK,CAACC,MAAN,CAAaG,QAAb,CAAsBC,QAA1B,EAAoC;AAChCL,UAAAA,KAAK,CAACC,MAAN,CAAaK,iBAAb,CAA+B,oCAA/B;AACH,SAFD,MAEO,IAAIN,KAAK,CAACC,MAAN,CAAaG,QAAb,CAAsBG,eAA1B,EAA2C;AAC9CP,UAAAA,KAAK,CAACC,MAAN,CAAaK,iBAAb,CAA+B,mCAA/B;AACH,SAFM,MAEA;AACHN,UAAAA,KAAK,CAACC,MAAN,CAAaK,iBAAb,CAA+B,EAA/B;AACH;AACJ;;AAED,WAAKE,QAAL,CAAc;AACV,SAACL,IAAD,GAAQD;AADE,OAAd;AAGH,KAhCkB;;AAAA,SAkCnBO,YAlCmB,GAkCHT,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACU,cAAN;AAEA,WAAKZ,KAAL,CAAWa,QAAX,CAAoBC,OAApB,CAA4BC,UAA5B,CAAuC,KAAKC,KAAL,CAAWC,cAAlD,EAAkEC,IAAlE,CAAuE;AAAEC,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI;AAAnB,OAAvE,EAAqG,CAACC,KAAD,EAAQC,aAAR,KAA0B;AAC3H,YAAID,KAAJ,EAAW;AACPE,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,SAFD,MAEO;AACHE,UAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAG,UAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAtC;AACA,eAAKjB,QAAL,CAAc;AAAEY,YAAAA,aAAa,EAAEA;AAAjB,WAAd;AACA,eAAKM,MAAL;AACH;AACJ,OATD;AAUH,KA/CkB;;AAAA,SAiDnBA,MAjDmB,GAiDV,MAAM;AACX,WAAKlB,QAAL,CAAc;AACVmB,QAAAA,MAAM,EAAE,CAAC,KAAKb,KAAL,CAAWa;AADV,OAAd;AAGH,KArDkB;;AAAA,SAuDnBC,SAvDmB,GAuDN5B,KAAD,IAAW;AACnB,aAAOA,KAAK,CAAC6B,OAAN,KAAkB,EAAlB,IAAwB,KAAKH,MAAL,EAA/B;AACH,KAzDkB;;AAAA,SA2DnBI,WA3DmB,GA2DJ9B,KAAD,IAAW;AACrB,UAAI,KAAK+B,SAAL,IAAkB,KAAKA,SAAL,CAAeC,QAAf,CAAwBhC,KAAK,CAACC,MAA9B,CAAtB,EAA6D;AAC7D,WAAKyB,MAAL;AACH,KA9DkB;;AAEf,SAAKZ,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,EADP;AAETG,MAAAA,OAAO,EAAE,EAFA;AAGTE,MAAAA,aAAa,EAAE,EAHN;AAITO,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMH;;AAED,SAAOM,wBAAP,CAAgCnC,KAAhC,EAAuC;AACnC,WAAO;AAACoB,MAAAA,OAAO,EAAEpB,KAAK,CAACoB;AAAhB,KAAP;AACH;;AAoDDgB,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AACA,MAAA,YAAY,EAAE,KAAKzB,YADnB;AAEA,MAAA,iBAAiB,EAAE,KAAKV,iBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI,KAAKe,KAAL,CAAWa,MAAX,IACA,oBAAC,YAAD;AACA,MAAA,MAAM,EAAE,KAAKD,MADb;AAEA,MAAA,SAAS,EAAE,KAAKE,SAFhB;AAGA,MAAA,WAAW,EAAE,KAAKE,WAHlB;AAIA,MAAA,QAAQ,EAAEK,CAAC,IAAI,KAAKJ,SAAL,GAAiBI,CAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKA;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzD,EAA+D,KAAKrB,KAAL,CAAWM,aAA1E,CALA,CANJ,CADJ;AAiBH;;AArF+C;;AAwFpD,eAAezB,qBAAf","sourcesContent":["import React from 'react';\nimport ModalContent from '../../presentationalComponents/ModalContent.js';\nimport SafeAddressForm from '../../presentationalComponents/SafeAddressForm.js';\nimport '../../css/Modal.css';\n\nclass ModalGetSafetyAddress extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            addressToCheck: '',\n            address: '',\n            safetyAddress: '',\n            isOpen: false\n        };\n    }\n\n    static getDerivedStateFromProps(props) {\n        return {address: props.address };\n    }\n\n    handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        if (name === 'addressToCheck') {\n            if (event.target.validity.tooShort) {\n                event.target.setCustomValidity('Public key has to be 42 characters');\n            } else if (event.target.validity.patternMismatch) {\n                event.target.setCustomValidity('Public key has to start with \"0x\"');\n            } else {\n                event.target.setCustomValidity('');\n            }  \n        }\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        \n        this.props.multisig.methods.safetyKeys(this.state.addressToCheck).call({ from: this.state.address }, (error, safetyAddress) => {\n            if (error) {\n                console.log(error);\n            } else {\n                console.log(safetyAddress);\n                document.getElementById('SafetyForm').reset();\n                this.setState({ safetyAddress: safetyAddress});\n                this.toggle();\n            }\n        });\n    }\n\n    toggle = () => {\n        this.setState({ \n            isOpen: !this.state.isOpen\n        });\n    };\n\n    onKeyDown = (event) => {\n        return event.keyCode === 27 && this.toggle();\n    }\n  \n    onClickAway = (event) => {\n        if (this.modalNode && this.modalNode.contains(event.target)) return;\n        this.toggle();\n    };\n\n    render() {\n\n        return (\n            <span>\n                <SafeAddressForm \n                handleSubmit={this.handleSubmit}\n                handleInputChange={this.handleInputChange}/>\n                {\n                this.state.isOpen && \n                <ModalContent \n                toggle={this.toggle} \n                onKeyDown={this.onKeyDown}\n                onClickAway={this.onClickAway}\n                modalRef={n => this.modalNode = n}> \n                <p className=\"modalText\">Your current safety address is: <br/>{this.state.safetyAddress}</p> \n                </ModalContent>\n                }\n            </span>\n        );\n    }\n}\n\nexport default ModalGetSafetyAddress;"]},"metadata":{},"sourceType":"module"}