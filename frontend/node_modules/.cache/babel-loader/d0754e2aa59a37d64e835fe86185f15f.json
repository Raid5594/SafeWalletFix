{"ast":null,"code":"import { SPECIFY_ADDRESS, SET_WEB3, SET_MULTISIG_CONTRACT, SET_MULTISIG_ERC_CONTRACT, SET_TOKEN_IMPERIAL, SET_TOKEN_DEMOCRATIC, UPDATE_ETHER_BALANCE, UPDATE_CONTRACT_BALANCE, UPDATE_TOKEN_IMPERIAL_BALANCE, UPDATE_TOKEN_DEMOCRATIC_BALANCE, UPDATE_TOKEN_IMPERIAL_CONTRACT_BALANCE, UPDATE_TOKEN_DEMOCRATIC_CONTRACT_BALANCE, SET_UPDATE_ETHER_BALANCES, SET_UPDATE_ERC_BALANCES } from '../actionTypes';\nconst initialState = {\n  web3: '',\n  multisig: '',\n  multisigERC20: '',\n  etherAddress: '',\n  etherBalance: '',\n  contractBalance: '',\n  tokenImperial: '',\n  tokenDemocratic: '',\n  tokenImperialBalance: '',\n  tokenDemocracticBalance: '',\n  tokenImperialContractBalance: '',\n  tokenDemocraticContractBalance: '',\n  login: false\n};\nexport default function handlingActions(state = initialState, action) {\n  switch (action.type) {\n    case SPECIFY_ADDRESS:\n      return Object.assign({}, state, {\n        etherAddress: action.payload,\n        login: true\n      });\n\n    case SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.payload\n      });\n\n    case SET_MULTISIG_CONTRACT:\n      return Object.assign({}, state, {\n        multisig: action.payload\n      });\n\n    case SET_MULTISIG_ERC_CONTRACT:\n      return Object.assign({}, state, {\n        multisigERC20: action.payload\n      });\n\n    case SET_TOKEN_IMPERIAL:\n      return Object.assign({}, state, {\n        tokenImperial: action.payload\n      });\n\n    case SET_TOKEN_DEMOCRATIC:\n      return Object.assign({}, state, {\n        tokenDemocratic: action.payload\n      });\n\n    case UPDATE_ETHER_BALANCE:\n      return Object.assign({}, state, {\n        etherBalance: action.payload\n      });\n\n    case UPDATE_CONTRACT_BALANCE:\n      return Object.assign({}, state, {\n        contractBalance: action.payload\n      });\n\n    case UPDATE_TOKEN_IMPERIAL_BALANCE:\n      return Object.assign({}, state, {\n        tokenImperialBalance: action.payload\n      });\n\n    case UPDATE_TOKEN_DEMOCRATIC_BALANCE:\n      return Object.assign({}, state, {\n        tokenDemocracticBalance: action.payload\n      });\n\n    case UPDATE_TOKEN_IMPERIAL_CONTRACT_BALANCE:\n      return Object.assign({}, state, {\n        tokenImperialContractBalance: action.payload\n      });\n\n    case UPDATE_TOKEN_DEMOCRATIC_CONTRACT_BALANCE:\n      return Object.assign({}, state, {\n        tokenDemocraticContractBalance: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/redux/reducers/reducers.js"],"names":["SPECIFY_ADDRESS","SET_WEB3","SET_MULTISIG_CONTRACT","SET_MULTISIG_ERC_CONTRACT","SET_TOKEN_IMPERIAL","SET_TOKEN_DEMOCRATIC","UPDATE_ETHER_BALANCE","UPDATE_CONTRACT_BALANCE","UPDATE_TOKEN_IMPERIAL_BALANCE","UPDATE_TOKEN_DEMOCRATIC_BALANCE","UPDATE_TOKEN_IMPERIAL_CONTRACT_BALANCE","UPDATE_TOKEN_DEMOCRATIC_CONTRACT_BALANCE","SET_UPDATE_ETHER_BALANCES","SET_UPDATE_ERC_BALANCES","initialState","web3","multisig","multisigERC20","etherAddress","etherBalance","contractBalance","tokenImperial","tokenDemocratic","tokenImperialBalance","tokenDemocracticBalance","tokenImperialContractBalance","tokenDemocraticContractBalance","login","handlingActions","state","action","type","Object","assign","payload"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,qBAApC,EACCC,yBADD,EAC4BC,kBAD5B,EACgDC,oBADhD,EAECC,oBAFD,EAEuBC,uBAFvB,EAEgDC,6BAFhD,EAGCC,+BAHD,EAGkCC,sCAHlC,EAICC,wCAJD,EAI2CC,yBAJ3C,EAKCC,uBALD,QAKgC,gBALhC;AAOA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,aAAa,EAAE,EAHK;AAIpBC,EAAAA,YAAY,EAAE,EAJM;AAKpBC,EAAAA,YAAY,EAAE,EALM;AAMpBC,EAAAA,eAAe,EAAE,EANG;AAOpBC,EAAAA,aAAa,EAAE,EAPK;AAQpBC,EAAAA,eAAe,EAAE,EARG;AASpBC,EAAAA,oBAAoB,EAAE,EATF;AAUpBC,EAAAA,uBAAuB,EAAE,EAVL;AAWpBC,EAAAA,4BAA4B,EAAE,EAXV;AAYpBC,EAAAA,8BAA8B,EAAE,EAZZ;AAapBC,EAAAA,KAAK,EAAE;AAba,CAArB;AAgBA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAGf,YAAjC,EAA+CgB,MAA/C,EAAuD;AACrE,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK/B,eAAL;AACF,aAAOgC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BX,QAAAA,YAAY,EAAEY,MAAM,CAACI,OADU;AAE/BP,QAAAA,KAAK,EAAE;AAFwB,OAAzB,CAAP;;AAID,SAAK1B,QAAL;AACC,aAAO+B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/Bd,QAAAA,IAAI,EAAEe,MAAM,CAACI;AADkB,OAAzB,CAAP;;AAGD,SAAKhC,qBAAL;AACC,aAAO8B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/Bb,QAAAA,QAAQ,EAAEc,MAAM,CAACI;AADc,OAAzB,CAAP;;AAGD,SAAK/B,yBAAL;AACC,aAAO6B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BZ,QAAAA,aAAa,EAAEa,MAAM,CAACI;AADS,OAAzB,CAAP;;AAGD,SAAK9B,kBAAL;AACC,aAAO4B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BR,QAAAA,aAAa,EAAES,MAAM,CAACI;AADS,OAAzB,CAAP;;AAGD,SAAK7B,oBAAL;AACC,aAAO2B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BP,QAAAA,eAAe,EAAEQ,MAAM,CAACI;AADO,OAAzB,CAAP;;AAGD,SAAK5B,oBAAL;AACC,aAAO0B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BV,QAAAA,YAAY,EAAEW,MAAM,CAACI;AADU,OAAzB,CAAP;;AAGD,SAAK3B,uBAAL;AACC,aAAOyB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BT,QAAAA,eAAe,EAAEU,MAAM,CAACI;AADO,OAAzB,CAAP;;AAGD,SAAK1B,6BAAL;AACC,aAAOwB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BN,QAAAA,oBAAoB,EAAEO,MAAM,CAACI;AADE,OAAzB,CAAP;;AAGD,SAAKzB,+BAAL;AACC,aAAOuB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BL,QAAAA,uBAAuB,EAAEM,MAAM,CAACI;AADD,OAAzB,CAAP;;AAGD,SAAKxB,sCAAL;AACC,aAAOsB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BJ,QAAAA,4BAA4B,EAAEK,MAAM,CAACI;AADN,OAAzB,CAAP;;AAGD,SAAKvB,wCAAL;AACC,aAAOqB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BH,QAAAA,8BAA8B,EAAEI,MAAM,CAACI;AADR,OAAzB,CAAP;;AAGE;AACE,aAAOL,KAAP;AAnDL;AAqDA","sourcesContent":["import { SPECIFY_ADDRESS, SET_WEB3, SET_MULTISIG_CONTRACT, \n\tSET_MULTISIG_ERC_CONTRACT, SET_TOKEN_IMPERIAL, SET_TOKEN_DEMOCRATIC, \n\tUPDATE_ETHER_BALANCE, UPDATE_CONTRACT_BALANCE, UPDATE_TOKEN_IMPERIAL_BALANCE,\n\tUPDATE_TOKEN_DEMOCRATIC_BALANCE, UPDATE_TOKEN_IMPERIAL_CONTRACT_BALANCE,\n\tUPDATE_TOKEN_DEMOCRATIC_CONTRACT_BALANCE, SET_UPDATE_ETHER_BALANCES,\n\tSET_UPDATE_ERC_BALANCES } from '../actionTypes';\n\nconst initialState = {\n\tweb3: '',\n\tmultisig: '',\n\tmultisigERC20: '',\n\tetherAddress: '',\n\tetherBalance: '',\n\tcontractBalance: '',\n\ttokenImperial: '',\n\ttokenDemocratic: '',\n\ttokenImperialBalance: '',\n\ttokenDemocracticBalance: '',\n\ttokenImperialContractBalance: '',\n\ttokenDemocraticContractBalance: '',\n\tlogin: false\n};\n\nexport default function handlingActions(state = initialState, action) {\n\tswitch (action.type) {\n    case SPECIFY_ADDRESS:\n\t\treturn Object.assign({}, state, {\n\t\t\tetherAddress: action.payload,\n\t\t\tlogin: true\n\t\t});\n\tcase SET_WEB3:\n\t\treturn Object.assign({}, state, {\n\t\t\tweb3: action.payload\n\t\t});\n\tcase SET_MULTISIG_CONTRACT:\n\t\treturn Object.assign({}, state, {\n\t\t\tmultisig: action.payload\n\t\t});\n\tcase SET_MULTISIG_ERC_CONTRACT:\n\t\treturn Object.assign({}, state, {\n\t\t\tmultisigERC20: action.payload\n\t\t});\t\n\tcase SET_TOKEN_IMPERIAL:\n\t\treturn Object.assign({}, state, {\n\t\t\ttokenImperial: action.payload\n\t\t});\n\tcase SET_TOKEN_DEMOCRATIC:\n\t\treturn Object.assign({}, state, {\n\t\t\ttokenDemocratic: action.payload\n\t\t});\n\tcase UPDATE_ETHER_BALANCE:\n\t\treturn Object.assign({}, state, {\n\t\t\tetherBalance: action.payload\n\t\t});\n\tcase UPDATE_CONTRACT_BALANCE:\n\t\treturn Object.assign({}, state, {\n\t\t\tcontractBalance: action.payload\n\t\t});\n\tcase UPDATE_TOKEN_IMPERIAL_BALANCE:\n\t\treturn Object.assign({}, state, {\n\t\t\ttokenImperialBalance: action.payload\n\t\t});\n\tcase UPDATE_TOKEN_DEMOCRATIC_BALANCE:\n\t\treturn Object.assign({}, state, {\n\t\t\ttokenDemocracticBalance: action.payload\n\t\t});\n\tcase UPDATE_TOKEN_IMPERIAL_CONTRACT_BALANCE:\n\t\treturn Object.assign({}, state, {\n\t\t\ttokenImperialContractBalance: action.payload\n\t\t});\n\tcase UPDATE_TOKEN_DEMOCRATIC_CONTRACT_BALANCE:\n\t\treturn Object.assign({}, state, {\n\t\t\ttokenDemocraticContractBalance: action.payload\n\t\t});\n    default:\n      return state;\n\t}\n}"]},"metadata":{},"sourceType":"module"}