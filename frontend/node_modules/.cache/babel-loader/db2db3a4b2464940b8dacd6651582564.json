{"ast":null,"code":"import { SPECIFY_ADDRESS, SET_WEB3, SET_MULTISIG_CONTRACT, SET_MULTISIG_ERC_CONTRACT } from '../actionTypes';\nconst initialState = {\n  web3: '',\n  multisig: '',\n  multisigERC20: '',\n  etherAddress: '',\n  login: false\n};\nexport default function handlingActions(state = initialState, action) {\n  switch (action.type) {\n    case SPECIFY_ADDRESS:\n      return Object.assign({}, state, {\n        etherAddress: action.payload,\n        login: true\n      });\n\n    case SET_WEB3:\n      return Object.assign({}, state, {\n        web3: action.payload\n      });\n\n    case SET_MULTISIG_CONTRACT:\n      return Object.assign({}, state, {\n        multisig: action.payload\n      });\n\n    case SET_MULTISIG_ERC_CONTRACT:\n      return Object.assign({}, state, {\n        multisigERC20: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Raid/test/testpApp3/SafeWalletFix/frontend/src/redux/reducers/reducers.js"],"names":["SPECIFY_ADDRESS","SET_WEB3","SET_MULTISIG_CONTRACT","SET_MULTISIG_ERC_CONTRACT","initialState","web3","multisig","multisigERC20","etherAddress","login","handlingActions","state","action","type","Object","assign","payload"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,QAA1B,EAAoCC,qBAApC,EAA2DC,yBAA3D,QAA4F,gBAA5F;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,aAAa,EAAE,EAHK;AAIpBC,EAAAA,YAAY,EAAE,EAJM;AAKpBC,EAAAA,KAAK,EAAE;AALa,CAArB;AAQA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAGP,YAAjC,EAA+CQ,MAA/C,EAAuD;AACrE,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKb,eAAL;AACF,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BH,QAAAA,YAAY,EAAEI,MAAM,CAACI,OADU;AAE/BP,QAAAA,KAAK,EAAE;AAFwB,OAAzB,CAAP;;AAID,SAAKR,QAAL;AACC,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BN,QAAAA,IAAI,EAAEO,MAAM,CAACI;AADkB,OAAzB,CAAP;;AAGD,SAAKd,qBAAL;AACC,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BL,QAAAA,QAAQ,EAAEM,MAAM,CAACI;AADc,OAAzB,CAAP;;AAGD,SAAKb,yBAAL;AACC,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC/BJ,QAAAA,aAAa,EAAEK,MAAM,CAACI;AADS,OAAzB,CAAP;;AAGE;AACE,aAAOL,KAAP;AAnBL;AAqBA","sourcesContent":["import { SPECIFY_ADDRESS, SET_WEB3, SET_MULTISIG_CONTRACT, SET_MULTISIG_ERC_CONTRACT } from '../actionTypes';\n\nconst initialState = {\n\tweb3: '',\n\tmultisig: '',\n\tmultisigERC20: '',\n\tetherAddress: '',\n\tlogin: false\n};\n\nexport default function handlingActions(state = initialState, action) {\n\tswitch (action.type) {\n    case SPECIFY_ADDRESS:\n\t\treturn Object.assign({}, state, {\n\t\t\tetherAddress: action.payload,\n\t\t\tlogin: true\n\t\t});\n\tcase SET_WEB3:\n\t\treturn Object.assign({}, state, {\n\t\t\tweb3: action.payload\n\t\t});\n\tcase SET_MULTISIG_CONTRACT:\n\t\treturn Object.assign({}, state, {\n\t\t\tmultisig: action.payload\n\t\t});\n\tcase SET_MULTISIG_ERC_CONTRACT:\n\t\treturn Object.assign({}, state, {\n\t\t\tmultisigERC20: action.payload\n\t\t});\t\t\n    default:\n      return state;\n\t}\n}"]},"metadata":{},"sourceType":"module"}